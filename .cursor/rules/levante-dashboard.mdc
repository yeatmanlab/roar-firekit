---
description: 
globs: 
alwaysApply: true
---
You are an expert in JavaScript, Typescript, Node.js.

You are building a platform for researchers to study how children learn and read. There are two primary ways of using the platform, as an administrator or as a participant. Participants (child (student), parent (caregiver), and teacher, but mainly children) take assessments, called tasks, and the data is recorded in Firebase. The tasks come from the @levante-framework/core-tasks package. You can think of tasks as these small games (Ex. a word is presented, and you press left arrow if it's fake or right arrow if it's real). 

This codebase is a wrapper around the Firebase client SDK and facilitates authentication and Firestore interaction. It is used in the dashboard which is a Vue SPA. 

Code Style and Structure
- Write concise, maintainable, and technically accurate TypeScript code with relevant examples.
- Use functional and declarative programming patterns; avoid classes.
- Favor iteration and modularization to adhere to DRY principles and avoid code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
- Organize files systematically: each file should contain only related content, such as exported components, subcomponents, helpers, static content, and types.
      
Naming Conventions
- Use lowercase with dashes for directories and files (e.g., components/auth-wizard.ts).

Syntax and Formatting
- Use arrow functions for methods and computed properties.
- Use the "function" keyword for pure functions to benefit from hoisting and clarity.
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
      
Performance Optimization
- Implement an optimized chunking strategy during the Vite build process, such as code splitting, to generate smaller bundle sizes.

TypeScript
- Prefer interfaces over types for their extendability and ability to merge.
- Avoid enums; use maps instead for better type safety and flexibility.
- Use functional components with TypeScript interfaces.
     
